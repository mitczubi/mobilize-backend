const ShortUrl = require('../models/ShortUrl');
const { urlShortener } = require('../utils/stringHasher');

exports.getHome = (req, res) => {
    res.json({
        "message": "Mobilize Backend Takehome"
    })
}

exports.createShortUrl = (req, res) => {
    var url_expression = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()@:%_\+.~#?&//=]*)/gi;
    var regex = new RegExp(url_expression);

    // validate if the provided url is a url else return error
    if ((req.body.url).match(regex)) {
        // generate short id generated by the url string (makes unique and hash ensures same id for same url)
        short_id = urlShortener(req.body.url);

        // query data base if record with short url exists if not create else use data from query
        // this avoids duplicate records to save on space
        ShortUrl.findOne({short_id: short_id}, (err, data) => {
            if (err) return console.error(err);

            if (!data) {
                const shortUrl = new ShortUrl({
                    original_url: req.body.url,
                    short_id: short_id
                });
        
                shortUrl.save(function(err, data) {
                    if (err) return console.error(err)
                });
        
                short_url = req.get('host') + "/" + shortUrl.short_id
            } else {
                short_url = req.get('host') + "/" + data.short_id
            }

            res.json({
                short_url: short_url
            })
        })
    } else {
        res.json(({
            error: "Invalid URL"
        }))
    }
}